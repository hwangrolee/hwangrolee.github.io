<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://hwangrolee.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://hwangrolee.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-07T14:48:03+00:00</updated><id>https://hwangrolee.github.io/feed.xml</id><title type="html">blank</title><subtitle>개발을 좋아하는 이황로입니다. 스타트업에서 웹 프론트엔드/백엔드 업무 모두 경험을 했고 수많은 새로운 기능을 개발했으며 버그를 수정해왔습니다. 그리고 서비스가 불안정할 때 MySQL, Redis 등 시스템 퍼포먼스를 개선하여 안정화 시킨 경험이 있고 제가 좋아하는 업무입니다. </subtitle><entry><title type="html">Apple login 사용해보기</title><link href="https://hwangrolee.github.io/blog/apple-login-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Apple login 사용해보기"/><published>2024-12-01T00:00:00+00:00</published><updated>2024-12-01T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/apple-login-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/apple-login-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0/"><![CDATA[<h3 id="0-준비사항">0. 준비사항</h3> <p><a href="https://developer.apple.com/kr/news/?id=09122019b">애플 로그인 뉴스</a></p> <p>https://developer.apple.com/account 에서 필요한 정보를 알 수 있습니다.</p> <h3 id="1-ceriticates-ids--profile에서-세팅정보를-알수-있습니다">1. Ceriticates, IDs &amp; Profile에서 세팅정보를 알수 있습니다.</h3> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_1.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="Ceriticates, IDs &amp; Profile에서 세팅정보를 알수 있습니다." title="Ceriticates, IDs &amp; Profile에서 세팅정보를 알수 있습니다." loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="2-identifiers-탭에서-본인의-identifier를-선택하세요">2. Identifiers 탭에서 본인의 identifier를 선택하세요</h3> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_2.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="Identifiers 탭에서 본인의 identifier를 선택하세요" title="Identifiers 탭에서 본인의 identifier를 선택하세요" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="3-apple-id-prefix--team-id-bundle-id--client-id">3. Apple ID Prefix = Team ID, Bundle ID = Client ID</h3> <p>Apple ID Prefix는 Team ID 입니다.</p> <p>Bundle ID는 ClientId 입니다.</p> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_3.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="Apple ID Prefix=Team ID, Bundle ID=Client ID" title="Apple ID Prefix=Team ID, Bundle ID=Client ID" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="4-로그인-기능을-활성화하세요">4. 로그인 기능을 활성화하세요.</h3> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_4.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="로그인 기능을 활성화하세요." title="로그인 기능을 활성화하세요." loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="5-keys-에서-애플-로그인을-위한-서비스를-생성하세요">5. Keys 에서 애플 로그인을 위한 서비스를 생성하세요</h3> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_5.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="Keys 에서 애플 로그인을 위한 서비스를 생성하세요" title="Keys 에서 애플 로그인을 위한 서비스를 생성하세요" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="6-key-id--private-key-를-확인하세요">6. key id &amp; private key 를 확인하세요.</h3> <p>Download 버튼을 클릭하면 private key 를 다운받으실 수 있습니다.</p> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_6.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="key id &amp; private key 를 확인하세요." title="key id &amp; private key 를 확인하세요." loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="7-client_secret-을-구해보겠습니다">7. client_secret 을 구해보겠습니다.</h3> <p>jwt를 설치합니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>gem <span class="nb">install </span>jwt
</code></pre></div></div> <p>아래 스크립트를 client_secret.rb 파일로 생성합니다.</p> <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">require</span> <span class="s1">'jwt'</span>
<span class="n">key_file</span> <span class="o">=</span> <span class="s1">'private_key.p8'</span>
<span class="n">team_id</span> <span class="o">=</span> <span class="s1">'team_id'</span>
<span class="n">client_id</span> <span class="o">=</span> <span class="s1">'client_id'</span>
<span class="n">key_id</span> <span class="o">=</span> <span class="s1">'key_id'</span>
<span class="n">ecdsa_key</span> <span class="o">=</span> <span class="no">OpenSSL</span><span class="o">::</span><span class="no">PKey</span><span class="o">::</span><span class="no">EC</span><span class="p">.</span><span class="nf">new</span> <span class="no">IO</span><span class="p">.</span><span class="nf">read</span> <span class="n">key_file</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'kid'</span> <span class="o">=&gt;</span> <span class="n">key_id</span>
<span class="p">}</span>
<span class="n">claims</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s1">'iss'</span> <span class="o">=&gt;</span> <span class="n">team_id</span><span class="p">,</span>
  <span class="s1">'iat'</span> <span class="o">=&gt;</span> <span class="no">Time</span><span class="p">.</span><span class="nf">now</span><span class="p">.</span><span class="nf">to_i</span><span class="p">,</span>
  <span class="s1">'exp'</span> <span class="o">=&gt;</span> <span class="no">Time</span><span class="p">.</span><span class="nf">now</span><span class="p">.</span><span class="nf">to_i</span> <span class="o">+</span> <span class="mi">86400</span><span class="o">*</span><span class="mi">180</span><span class="p">,</span>
  <span class="s1">'aud'</span> <span class="o">=&gt;</span> <span class="s1">'https://appleid.apple.com'</span><span class="p">,</span>
  <span class="s1">'sub'</span> <span class="o">=&gt;</span> <span class="n">client_id</span>
<span class="p">}</span>
<span class="n">token</span> <span class="o">=</span> <span class="no">JWT</span><span class="p">.</span><span class="nf">encode</span> <span class="n">claims</span><span class="p">,</span> <span class="n">ecdsa_key</span><span class="p">,</span> <span class="s1">'ES256'</span><span class="p">,</span> <span class="n">headers</span>
<span class="nb">puts</span> <span class="n">token</span>
</code></pre></div></div> <p>client_secret.rb 실행하여 client_secret 을 구합니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ruby client_secret.rb
</code></pre></div></div> <blockquote class="block-tip"> <h5 id="tip">TIP</h5> <p>테스트할 때에는 웹을 사용하는데 그럴때에는 Client ID 에 Bundle ID가 아닌 Group ID를 넣어주면 더욱 편하게 테스트를 할 수있습니다.</p> </blockquote> <h3 id="8-토큰을-구하기-전에-먼저-사용자인증을-통해-code-값을-구합니다">8. 토큰을 구하기 전에 먼저 사용자인증을 통해 code 값을 구합니다.</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>https://appleid.apple.com/auth/authorize?response_type<span class="o">=</span>code&amp;client_id<span class="o">={</span>client_id<span class="o">}</span>&amp;redirect_uri<span class="o">={</span>redirect_uri<span class="o">}</span>
</code></pre></div></div> <figure> <picture> <img src="/assets/img/posts/2024-12-01-apple-login/apple_login_7.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" alt="토큰을 구하기 전에 먼저 사용자인증을 통해 code 값을 구합니다." title="토큰을 구하기 전에 먼저 사용자인증을 통해 code 값을 구합니다." loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <blockquote class="block-warning"> <h5 id="확인사항-1">확인사항 1</h5> <p>이 부분에서 상당히 시간소모를 했습니다. Client_id가 어떤것인지 애플쪽에서 정확히 명시하지 않아 헷갈려서 다른 값을 넣었고 에러코드가 client_id 가 틀리다고 나오질 않았기 때문에 다른 부분에서 문제가 있는줄 알고 구글서치만 수시간… 이 부분에서 redirect_uri를 입력했는데도 잘 안된다면 client_id 부터 의심하세요.</p> </blockquote> <blockquote class="block-warning"> <h5 id="확인사항-2">확인사항 2</h5> <p>만약 리디렉션됐는데도 Code가 안나온다면 response_mode, scope를 파라미터로 전달했는지 확인해보세요. response_mode와 scope를 전달하면 code를 받을 수 없습니다</p> </blockquote> <blockquote class="block-warning"> <h5 id="확인사항-3">확인사항 3</h5> <p>위 부분을 실행하면 xxx.com/?code={code} 형태로 리디렉션되며 code를 알 수 있습니다. 참고로 code는 5분간 유효한 키입니다.</p> </blockquote> <h3 id="9-code를-구했다면-이제는-access-token을-구할-수-있습니다">9. code를 구했다면 이제는 Access Token을 구할 수 있습니다.</h3> <p>id_token은 jwt로 인코딩되어있으며 https://jwt.io 에서 디코딩해서 데이터를 볼 수 있습니다.</p> <p>참고 : <a href="https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens?source=post_page-----a5b70fbf2f02--------------------------------">Generate and validate tokens</a></p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="nt">-XPOST</span> <span class="s2">"https://appleid.apple.com/auth/token"</span> <span class="nt">-H</span> <span class="s2">"Content-Type: application/x-www-form-urlencoded"</span> <span class="nt">-d</span> <span class="s2">"client_id={client_id}&amp;client_secret={client_secret}&amp;grant_type=authorization_code&amp;code={code}"</span> | json_pp
<span class="o">{</span>
    <span class="s2">"refresh_token"</span> : <span class="s2">""</span>,
    <span class="s2">"expires_in"</span> : 3600,
    <span class="s2">"id_token"</span> : <span class="s2">""</span>,
    <span class="s2">"access_token"</span> : <span class="s2">""</span>,
    <span class="s2">"token_type"</span> : <span class="s2">"Bearer"</span>
<span class="o">}</span>
</code></pre></div></div> <p>이메일은 이메일 공유하기로 로그인한 경우 애플ID 로 보이고, 가리기를 선택한 경우 @private.appleid.com 으로 이메일이 생성되어집니다.</p> <p>sub라는 필드는 하나의 애플계정의 유니크한 값이니 이메일로 유저를 구분하지 않고 sub필드로 유저를 구분할 수 있습니다.</p> <h3 id="참고">참고</h3> <ul> <li><a href="https://sarunw.com/posts/sign-in-with-apple-4/">sign-in-with-apple-4</a></li> <li><a href="https://developer.apple.com/documentation/sign_in_with_apple/generate_and_validate_tokens">generate_and_validate_tokens</a></li> <li><a href="https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_rest_api/authenticating_users_with_sign_in_with_apple">authenticating_users_with_sign_in_with_apple</a></li> </ul>]]></content><author><name></name></author><category term="로그인"/><category term="애플로그인,"/><category term="AppleLogin"/><summary type="html"><![CDATA[Apple Login을 직접 구현하는 방법을 알아봅니다.]]></summary></entry><entry><title type="html">Spring boot에서 Elastic search 연동하며 느낀점</title><link href="https://hwangrolee.github.io/blog/Spring-boot%EC%97%90%EC%84%9C-Elasticsearch-%EC%97%B0%EB%8F%99%ED%95%98%EB%A9%B0-%EB%8A%90%EB%82%80%EC%A0%90/" rel="alternate" type="text/html" title="Spring boot에서 Elastic search 연동하며 느낀점"/><published>2019-05-11T13:05:00+00:00</published><updated>2019-05-11T13:05:00+00:00</updated><id>https://hwangrolee.github.io/blog/Spring-boot%EC%97%90%EC%84%9C-Elasticsearch-%EC%97%B0%EB%8F%99%ED%95%98%EB%A9%B0-%EB%8A%90%EB%82%80%EC%A0%90</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Spring-boot%EC%97%90%EC%84%9C-Elasticsearch-%EC%97%B0%EB%8F%99%ED%95%98%EB%A9%B0-%EB%8A%90%EB%82%80%EC%A0%90/"><![CDATA[<p>Spring boot에서 Elasticsearch를 ORM으로 시도했다가 Rest Client로 바꾼 이유에 대해서 설명할게요.</p> <h4 id="시작은-orm으로-개발하기">시작은 ORM으로 개발하기</h4> <p>elasticsearch7 을 docker로 설치하여 curl로 테스트를 하다 spring boot로 테스트를 하고 싶어 spring boot 2.1.4 기반으로 개발을 해 보았습니다.</p> <p>spring boot에서 elasticsearch와 연동할때 <a href="https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch/3.1.6.RELEASE">spring-boot-starter-data-elasticsearch</a>을 사용했는데 아직까진 elasticsearch 7에는 연결이 안되더군요…</p> <p>처음 시도하는거라 설정이 잘못된건가? spring에서 docker로 설치한 elasticsearch에 접근하지 못한건가? 싶어 많은 시간 삽질을 했습니다.</p> <p>그 결과, spring-data-elasticsearch와 elasticsearch는 버전에 큰 영향을 받기 때문에 연동시 문제가 될 수 있다고 합니다.</p> <p>그래서 제가 선택한 것은 ORM을 사용해보고 싶은 마음에 elasticsearch를 6.5로 downgrade 했고 spring-boot-starter-data-elasticsearch를 사용해 보았습니다.</p> <h4 id="orm에서-rest-client로-바꾼-이유">ORM에서 Rest Client로 바꾼 이유</h4> <p>결론은 저의 코딩스타일을 살리기 힘들어서 이 방법은 포기하고 Rest Client로 공부를 시작했습니다.</p> <blockquote> <p>저는 코딩시 <a href="https://en.wikipedia.org/wiki/Camel_case"><strong>CamelCase</strong></a>를 선호하고 저장소(database, elasticsearch, redis, ETC.)는 <a href="https://en.wikipedia.org/wiki/Snake_case"><strong>SnakeCase</strong></a>를 선호합니다.</p> </blockquote> <blockquote> <p>spring boot에서 <strong>@JsonProperty</strong>로 Elasticsearch field를 지정할 수 있었지만 elasticsearch 6.2.2 이후에는 지원하지 않아 ORM을 통해 Elasticsearch를 관리하고 싶다면 코딩을 <strong>SnakeCase</strong>로 바꾸거나 Elasticsearch field명을 <strong>CamelCase</strong>로 바꾸어야 하지만 그러긴 싫었습니다.</p> </blockquote> <h4 id="장점">장점</h4> <ul> <li>rest client로 연동할 경우 elasticsearch가 업데이트 될 경우 spring-data-elasticsearch가 새로운 elasticsearch를 지원할때까지 기다리지 않고 사용할 수 있습니다.</li> <li>elasticsearch의 다양한 쿼리는 직접 만들어볼 수 있습니다. 신나겠다.</li> <li>직접 쿼리를 만들어볼 수 있는 만큼 튜닝도 가능하니 성능을 향상시키기 위해 많은 공부를 할 수 있을거에요.</li> </ul> <h4 id="단점">단점</h4> <ul> <li>직접 쿼리를 만들어야하니 귀찮습니다.</li> </ul>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Spring boot에서 Elasticsearch를 ORM으로 시도했다가 Rest Client로 바꾼 이유에 대해서 설명할게요.]]></summary></entry><entry><title type="html">Elasticsearch Simple Query String Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Simple-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Simple Query String Query에 대해서 알아보기"/><published>2019-05-09T13:45:00+00:00</published><updated>2019-05-09T13:45:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Simple-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Simple-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p><em>query_string</em>과는 달리 <em>simple_query_string</em>쿼리는 예외를 throw하지 않으며 쿼리의 잘못된 부분을 삭제합니다.</p> <p><em>simple_query_string</em>은 특수문자를 통해 연산자를 선언할 수 있습니다.</p> <p><strong>+</strong> : AND operation</p> <p><strong>|</strong> : OR operation</p> <p><strong>-</strong> : 싱글 토큰을 무시합니다.</p> <p><strong>“</strong> : 검색어 구문 그대로 검색하기 위해 사용합니다.</p> <p><strong>*</strong> : 단어의 끝에 선언하는 prefix query</p> <p><strong>(</strong> <strong>)</strong> : 구문을 감쌀때 사용</p> <h4 id="example">example</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "simple_query_string": {
      "fields": ["country"],
      "query": "kor* -south"
    }
  }
}'</span>
</code></pre></div></div> <p>kor로 시작하는 단어가 들어가며 south라는 단어는 빼고 검색합니다.</p> <blockquote> <p>참고사이트</p> <ol> <li>https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html</li> </ol> </blockquote>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Simple Query String Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Common Terms Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Common-Terms-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Common Terms Query에 대해서 알아보기"/><published>2019-05-09T00:00:00+00:00</published><updated>2019-05-09T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Common-Terms-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Common-Terms-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p>쿼리의 모든 term에는 비용이 있습니다.</p> <p>만약 “The brown fox”를 검색하려면 “the”, “brown”, “fox”로 검색을 하게 되며 “the”의 경우 많은 문서와 일치하므로 다른 두 용어보다 영향력이 적습니다.</p> <p>이러한 경우에 예전에는 빈도가 높은 용어를 무시하는 것이었습니다. “the”를 <em>stopword</em>로 처리하여 인덱스크기를 줄이고 실행하는 term 쿼리의 수를 줄이는 것입니다.</p> <p>이 방법의 문제점 <em>stopwords</em>가 관련성에는 미치는 영향이 적지만 중요한 부분도 존재합니다. <em>stopword</em>를 제거할 경우 정확도는 떨어지게됩니다.</p> <p>예를 들어 “happy” 와 “not happy”를 구분할 수 없습니다.</p> <p><em>common terms query</em>는 <em>query terms</em>를 더 중요한 그룹, 덜 중요한 그룹으로 나뉩니다.</p> <ol> <li> <p>중요한 용어와 일치하는 문서를 검색합니다. 이는 검색으로 나온 결과 문서가 적을 수록 관련성에 더 큰 영향력을 준다는 말이 됩니다.</p> </li> <li> <p>덜 중요한 용어(빈번하게 존재하며 낮은 관련성을 띄는 단어)에 대한 쿼리를 실행합니다. 그러나 모든 문서에 대한 관련성 점수를 계산하는 대신 첫번째 쿼리에서 이미 일치하는 문서의 <strong>_score</strong> 만 계산합니다.</p> </li> </ol> <p>이러한 방식으로 <em>high frequency terms</em>(많이 존재하는 단어?)에 대한 성능 저하 비용을 지불하지 않고도 관련도 계산을 향상시킬 수 있습니다.</p> <p>만약 쿼리에 <em>high frequency terms</em>로만 이루어져 있다면 <em>and</em> 쿼리로 실행합니다.</p> <p>Terms는 <em>relative frequency</em>(0.0 .. 1.0) 혹은 <em>absolute frequency</em>(&gt;=1)로 지정할 수 있는 <strong>cutoff_frequency</strong>에 따라 높거나 낮은 빈도 그룹으로 할당됩니다.</p> <h3 id="example">example</h3> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "common": {
      "country": {
        "query": "Republic of",
        "cutoff_frequency": 0.001,
        "low_freq_operator": "and"
      }
    }
  }
}'</span>
</code></pre></div></div> <blockquote> <p>참고사이트</p> <ol> <li>https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-common-terms-query.html</li> </ol> </blockquote>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Common Terms Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Query String Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Query String Query에 대해서 알아보기"/><published>2019-05-09T00:00:00+00:00</published><updated>2019-05-09T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Query-String-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p><em>query string</em>쿼리는 연산자를 중심으로 텍스트를 분할하여 쿼리를 분석합니다.</p> <h4 id="example">example</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "query_string": {
      "default_field": "country",
      "query": "(south africa) OR (south korea)"
    }
  }
}'</span>
</code></pre></div></div> <p>“south africa”와 “south korea”로 나뉘며 각 부분은 분석기에 의해서 독립적으로 분석됩니다.</p> <p>공백은 연산자로 간주되지 않아 공백 상태 그대로 분석기에 전달됩니다. 만약 각 단어를 개별적으로 쿼리하길 원한다면 단어에 연산자를 추가해야합니다.</p> <p>예를 들어, “south africa”을 검색하시려면 (south AND africa)으로 입력하시면 되며 “(south africa) OR (south korea)”는 “(south AND africa) OR (south AND korea)” 로 하시면 됩니다.</p> <p>여러 필드를 통해 검색을 하고 싶다면 <em>type</em> 속성을 사용하시면 됩니다. 기본값은 <em>“best_fields”</em>입니다. 그리고 <em>fields</em>를 검색할 필드명을 명시할 수 있습니다.</p> <h4 id="example-1">example</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "query_string": {
      "query": "south AND asia",
      "fields": ["country", "message"]
    }
  }
}'</span>
</code></pre></div></div> <blockquote> <p>참고사이트</p> <ol> <li>https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html</li> </ol> </blockquote>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Query String Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Multi Match Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Multi-Match-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Multi Match Query에 대해서 알아보기"/><published>2019-05-08T10:35:00+00:00</published><updated>2019-05-08T10:35:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Multi-Match-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Multi-Match-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p>쿼리를 시도할때 검색어를 하나의 필드가 아닌 여러개의 필드를 통해 검색을 하고 싶다면 <strong>Multi Match Query</strong>를 사용하세요.</p> <p>단, 한번에 검색할 수 있는 필드 수에는 제한이 있으며 기본값은 1024개이며 <em>indices.query.bool.max_clause_count</em> 검색설정에 정의되어있습니다.</p> <p>만약 검색하려는 필드가 비어있다면 모든 필드를 검색합니다. 단, 매핑타입에 맞는 필드로 한정하는 것 같습니다. 하지만 검색하려는 필드가 비어있을 일은 거의 없겠죠?</p> <h4 id="example1">example1</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "multi_match": {
      "query": "south",
      "fields": ["country", "message"]
    }
  }
}'</span>
</code></pre></div></div> <p><em>“south”</em>라는 검색어를 <em>country</em>, <em>message</em>필드에서 검색합니다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">23</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"gte"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mf">4.295763</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>위 예제는 기본적인 Multi Match Query입니다.</p> <p>이외에도 유형을 정의하여 검색을 할 수 있습니다.</p> <h3 id="best_fields">best_fields</h3> <p><em>best_fields</em>는 동일한 필드에서 여러 단어를 검색할때 유용합니다. 그리고 정확도가 높은 필드의 <em>score</em>를 사용하지만 <em>tie_breaker</em>가 지정되 있다면 정확도가 높은 필드의 <em>_score</em> + 다른 모든 필드의 (<em>tie_breaker</em> * <em>_score</em>)로 score를 계산합니다.</p> <p><em>best_fields</em>의 동작방식은 각 필드에 대해 <em>match query</em>를 생성하고 <em>dis_max</em> 쿼리에서 래핑하여 가장 일치하는 단일 필드를 찾습니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "multi_match": {
      "query": "south",
      "fields": ["country", "*ssage"],
      "type": "best_fields",
      "tie_breaker":0.3
    }
  }
}'</span>
</code></pre></div></div> <p>위와 같은 쿼리는 다음과 같습니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "dis_max": {
      "queries": [
        { "match": { "country": "south" }},
        { "match": { "message": "south" }}
      ],
      "tie_breaker": 0.3
    }
  }
}'</span>
</code></pre></div></div> <h3 id="most_fields">most_fields</h3> <p><em>most_fields</em>는 다른 방식으로 같은 텍스트를 analyze 해서 여러 필드를 쿼리할때 유용합니다.</p> <p>예를들어 필드가 다른 형태소 분석기를 쓰는 경우입니다.</p> <h3 id="cross_fields">cross_fields</h3> <p><em>cross_fields</em>는 모든 필드를 하나의 필드 처럼 보고 검색을 진행합니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "multi_match": {
      "query": "asia korea",
      "type": "cross_fields",
      "operator": "and",
      "fields": ["region", "country"]
    }
  }
}'</span>

</code></pre></div></div> <h3 id="phrase">phrase</h3> <p>각 필드에서 <em>match_phrase</em> 쿼리를 실행하고 최상의 필드에서 <em>_score</em>를 사용합니다.</p> <h3 id="phrase_prefix">phrase_prefix</h3> <p>각 필드에서 <em>match_phrase_prefix</em> 쿼리를 실행하고 각 필드의 <em>_score</em>를 사용합니다.</p> <blockquote> <p>참고사이트</p> <ol> <li>https://gist.github.com/einsub/86638954d3d6168bdfbe772c3f3d3d90</li> <li>https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html#type-best-fields</li> </ol> </blockquote>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Multi Match Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Match Phrase Prefix Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Prefix-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Match Phrase Prefix Query에 대해서 알아보기"/><published>2019-05-04T11:30:00+00:00</published><updated>2019-05-04T11:30:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Prefix-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Prefix-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p><strong>Match Phrase Query</strong> 와 같지만 약간 다른 <strong>Match Phrase Prefix Query</strong>에 대해서 알아보겠습니다.</p> <p><em>Match Phrase Query</em>와 동일하게 동작하지만 마지막 term을 접두어로 일치하는 Document를 검색합니다.</p> <h4 id="example">example</h4> <p><em>max_expansions</em>는 prefix를 확장할 최대값을 지정합니다.</p> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "match_phrase_prefix": {
      "country": {
        "query":"south ko", "max_expansions": 10      }
    }
  }}'</span>
</code></pre></div></div> <p><em>match_phrase_prefix</em>로 “south ko”를 검색하면 “south”는 필수로 들어가며 “ko”는 prefix로서 “south ko”이 일치하는 document를 검색합니다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">5</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">8104</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"eq"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mf">11.504026</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Match Phrase Prefix Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Fuzziness에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Fuzziness%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Fuzziness에 대해서 알아보기"/><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Fuzziness%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Fuzziness%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p>Match Query를 공부 중 Fuzziness 개념을 알게 되었습니다.</p> <p>일부쿼리 및 API는 <em>fuzziness</em> 파라미터를 사용하여 정확하지 않은 퍼지매칭을 허용합니다.</p> <p><strong>text</strong>혹은 <strong>keyword</strong>쿼리시 <strong>fuzziness</strong>는 Levenshtein distance로 해석됩니다. <em>Levenshtein distance</em> 단어, 혹은 문장과 같은 string 간의 형태적 유사성을 정의하는 방법입니다. 하지만 한글처럼 각글자가 초/중/종성으로 이루어진 언어를 고려한 방법이 아니라고 합니다. 참고하세요</p> <p><strong>fuzziness</strong>의 허용되는 최대 거리 Levenshtein Edit Distance (또는 편집 횟수)는 <em>0</em>,<em>1</em>,<em>2</em> 입니다.</p> <p><em>AUTO</em> 는 용어의 길이에 따라 편집거리를 생성합니다.</p> <p><em>Fuzziness</em> 를 사용한 검색은 더 공부해봐야 겠지만 보통 <em>AUTO</em>만으로도 충분한 기대치를 얻을 수 있는 것 같습니다.</p> <h4 id="example1">example1</h4> <blockquote> <p><em>AUTO</em>를 테스트해봅니다.</p> </blockquote> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "match": {
      "message": {
        "query":"cloth",
        "fuzziness":"AUTO"
      }
    }
  },
  "size": 2
}'</span>
</code></pre></div></div> <p><em>AUTO</em> 로 하니 결과가 나오질 않았네요</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"eq"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <h4 id="example2">example2</h4> <blockquote> <p><em>cloth</em> 만 입력후 <em>fuzziness</em>를 2로 입력하니 clothes에 대한 결과물을 받아왔습니다.</p> </blockquote> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "match": {
      "message": {
        "query":"cloth",
        "fuzziness":"2"
      }
    }
  },
  "size": 2
}'</span>
</code></pre></div></div> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="p">:</span><span class="w"> </span><span class="mi">13</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gte"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">2.6643744</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"_index"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sales-records"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"_doc"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Nn9aY2oBml718jk9tMLH"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">2.6643744</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"total_profit"</span><span class="p">:</span><span class="w"> </span><span class="mf">566589.6</span><span class="p">,</span><span class="w">
          </span><span class="nl">"sales_channel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Offline"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">800003659</span><span class="p">,</span><span class="w">
          </span><span class="nl">"units_sold"</span><span class="p">:</span><span class="w"> </span><span class="mi">7715</span><span class="p">,</span><span class="w">
          </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"_dateparsefailure"</span><span class="p">],</span><span class="w">
          </span><span class="nl">"total_revenue"</span><span class="p">:</span><span class="w"> </span><span class="mf">843095.2</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">35.84</span><span class="p">,</span><span class="w">
          </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Cote d'Ivoire"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_priority"</span><span class="p">:</span><span class="w"> </span><span class="s2">"C"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"ship_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4/6/2016"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_price"</span><span class="p">:</span><span class="w"> </span><span class="mf">109.28</span><span class="p">,</span><span class="w">
          </span><span class="nl">"total_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">276505.6</span><span class="p">,</span><span class="w">
          </span><span class="nl">"item_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Clothes"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"region"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"host"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c5ceb9b17956"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2/19/2016"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/config-dir/1500000 Sales Records.csv"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa,Cote d'Ivoire,Clothes,Offline,C,2/19/2016,800003659,4/6/2016,7715,109.28,35.84,843095.20,276505.60,566589.60</span><span class="se">\r</span><span class="s2">"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2016-06-04T00:00:00.000Z"</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"_index"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sales-records"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"_doc"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4n9aY2oBml718jk9v9SH"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">2.6643744</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"total_profit"</span><span class="p">:</span><span class="w"> </span><span class="mf">621228.96</span><span class="p">,</span><span class="w">
          </span><span class="nl">"sales_channel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Offline"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">614078938</span><span class="p">,</span><span class="w">
          </span><span class="nl">"units_sold"</span><span class="p">:</span><span class="w"> </span><span class="mi">8459</span><span class="p">,</span><span class="w">
          </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"_dateparsefailure"</span><span class="p">],</span><span class="w">
          </span><span class="nl">"total_revenue"</span><span class="p">:</span><span class="w"> </span><span class="mf">924399.52</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">35.84</span><span class="p">,</span><span class="w">
          </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Cote d'Ivoire"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_priority"</span><span class="p">:</span><span class="w"> </span><span class="s2">"H"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"ship_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"11/28/2011"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_price"</span><span class="p">:</span><span class="w"> </span><span class="mf">109.28</span><span class="p">,</span><span class="w">
          </span><span class="nl">"total_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">303170.56</span><span class="p">,</span><span class="w">
          </span><span class="nl">"item_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Clothes"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"region"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"host"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c5ceb9b17956"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"11/17/2011"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/config-dir/1500000 Sales Records.csv"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa,Cote d'Ivoire,Clothes,Offline,H,11/17/2011,614078938,11/28/2011,8459,109.28,35.84,924399.52,303170.56,621228.96</span><span class="se">\r</span><span class="s2">"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-04-28T09:50:52.295Z"</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>상황에 따라 “AUTO” 혹은 0,1,2 를 선택하여 진행하시면 될 것 같습니다.</p>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Fuzziness에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch Match Phrase Query에 대해서 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch Match Phrase Query에 대해서 알아보기"/><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Query%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C%20%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-Match-Phrase-Query%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p>오늘은 Match Phrase Query란 무엇인가에 대해서 알아보겠습니다.</p> <p><em>match_phrase query</em>는 text를 분석하고 분석된 텍스트를 <em>phrase query</em>로 만듭니다.</p> <p><em>match query</em>는 띄어쓰기가 포함된 경우 analyze 하면 띄어쓰기로 token을 생성하여 token 중 하나라도 일치하면 document에 포함한다.</p> <p>반면, <em>match_phrase query</em>는 띄어쓰기를 포함한 정확한 검색을 하고 싶을때 사용하면 된다.</p> <h4 id="match-query-샘플"><em>match query</em> 샘플</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "match": {
      "message": {
        "query":"canada,snacks/online,c,9/13"      }
    }
  }}'</span>
</code></pre></div></div> <p><em>match query</em>로 할 경우 결과는 10,000개로 나왔네요.</p> <p>그 이유는 검색어를 <em>”,”</em>로 analyze하여 token을 생성하고 각 token이 포함된 document를 결과로 받아오기 때문입니다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">35</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"gte"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mf">15.147114</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <h4 id="match_phrase-query-샘플"><em>match_phrase query</em> 샘플</h4> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "match_phrase": {
      "message": {
        "query":"canada,snacks/online,c,9/13"      }
    }
  }}'</span>
</code></pre></div></div> <p><em>match_phrase query</em>는 <em>”,”</em>로 analyze하지 않아 <em>canada,snacks/online,c,9/13</em> 토큰 그대로 검색을 합니다. 결과는 1개만 나왔습니다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"eq"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mf">15.147113</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="err">...</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>검색어에 대해서 유사검색은 <em>match query</em>를 검색어가 정확하게 포함된 document를 원할 경우 <em>match_phrase query</em>를 사용하면 좋을 것 같습니다.</p>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch Match Phrase Query에 대해서 알아보기]]></summary></entry><entry><title type="html">Elasticsearch query context와 filter context 알아보기</title><link href="https://hwangrolee.github.io/blog/Elasticsearch-query-context%EC%99%80-filter-contex-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="Elasticsearch query context와 filter context 알아보기"/><published>2019-05-04T00:00:00+00:00</published><updated>2019-05-04T00:00:00+00:00</updated><id>https://hwangrolee.github.io/blog/Elasticsearch-query-context%EC%99%80-filter-contex-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0</id><content type="html" xml:base="https://hwangrolee.github.io/blog/Elasticsearch-query-context%EC%99%80-filter-contex-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0/"><![CDATA[<p>안녕하세요. Elastic Stack을 공부하고 있는 서버개발자입니다.</p> <p>logstash를 통해 elastic search에 데이터를 넣은 후 검색에 대한 공부를 진행하였습니다.</p> <p>오늘은 query context와 filter context가 어떻게 다른지를 알아보았습니다.</p> <p>우선, 이 포스팅을 보시는 분들은 이미 elasticsearch를 설치하였고 공부를 시작했다고 가정하겠습니다.</p> <p>만약 elsticsearch를 설치하지 않았으며 설치를 했지만 데이터가 없다면 제가 작성한 <strong><a href="https://hwangrolee.github.com/logstash를-사용해서-CSV파일을-elastic-search에-임포트하기/">logstash를 사용해서 CSV파일을 elastic search에 임포트하기</a></strong>편을 참고해보세요.</p> <hr/> <p>Elastic search를 통해 검색을 할 경우 <strong>쿼리 콘텍스트(query context)</strong>와 <strong>필터 콘텍스트(filter context)</strong>에 따라 달라집니다.</p> <h4 id="query-context">Query context</h4> <p>Query context는 쿼리 절이 “쿼리가 문서와 일치 하는가?”라는 질문에 답하며 _score를 통해 문서가 다른 문서와 비교하여 쿼리와 얼마나 일치하는지를 계산합니다.</p> <h4 id="filter-context">Filter Context</h4> <p>Filter Context는 쿼리절이 “쿼리가 문서와 일치하는가?”라는 질문에 답하지만 _score는 계산하지 않습니다.</p> <p>대부분 필터링을 위해 사용합니다.</p> <h4 id="example">example</h4> <blockquote> <p>예제를 통해 무엇이 다른지 확인해 볼게요</p> </blockquote> <ul> <li><em>message</em> 필드에 “africa”가 포함된 것.</li> <li><em>item_type</em> 필드가 “clothes” 인 것.</li> </ul> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl <span class="s2">"localhost:9200/sales-records/_search?pretty"</span> <span class="nt">-H</span> <span class="s2">"Content-Type:application/json"</span> <span class="nt">-d</span> <span class="s1">'
{
  "query": {
    "bool": {
      "must": [
        {"match": {"message": "africa"}}
      ],
      "filter": [
        {"term": {"item_type": "clothes"}}
      ]}
    },
    "size": 2
}'</span>
</code></pre></div></div> <p><em>“query”</em>는 query context에서 동작합니다. <em>“bool”</em> 과 <em>“must”</em>는 query context에서 사용됩니다. 얼마나 일치하는 지를 평가하는데 사용됩니다.</p> <p><em>“filter</em>는 filter context에서 동작하며 <em>“term”</em>은 filter context에서 사용됩니다. 일치하는 문서는 걸러내지만 점수에는 영향을 주지 않습니다.</p> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"took"</span><span class="p">:</span><span class="w"> </span><span class="mi">17</span><span class="p">,</span><span class="w">
  </span><span class="nl">"timed_out"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
  </span><span class="nl">"_shards"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"successful"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
    </span><span class="nl">"skipped"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
    </span><span class="nl">"failed"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"value"</span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
      </span><span class="nl">"relation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"gte"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="nl">"max_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.2925828</span><span class="p">,</span><span class="w">
    </span><span class="nl">"hits"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"_index"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sales-records"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"_doc"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Dn9aY2oBml718jk9tcNd"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.2925828</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"total_profit"</span><span class="p">:</span><span class="w"> </span><span class="mf">37674.72</span><span class="p">,</span><span class="w">
          </span><span class="nl">"sales_channel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Online"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">653758466</span><span class="p">,</span><span class="w">
          </span><span class="nl">"units_sold"</span><span class="p">:</span><span class="w"> </span><span class="mi">513</span><span class="p">,</span><span class="w">
          </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"_dateparsefailure"</span><span class="p">],</span><span class="w">
          </span><span class="nl">"total_revenue"</span><span class="p">:</span><span class="w"> </span><span class="mf">56060.64</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">35.84</span><span class="p">,</span><span class="w">
          </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"South Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_priority"</span><span class="p">:</span><span class="w"> </span><span class="s2">"M"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"ship_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"3/16/2013"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_price"</span><span class="p">:</span><span class="w"> </span><span class="mf">109.28</span><span class="p">,</span><span class="w">
          </span><span class="nl">"total_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">18385.92</span><span class="p">,</span><span class="w">
          </span><span class="nl">"item_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Clothes"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"region"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"host"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c5ceb9b17956"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2/21/2013"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/config-dir/1500000 Sales Records.csv"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa,South Africa,Clothes,Online,M,2/21/2013,653758466,3/16/2013,513,109.28,35.84,56060.64,18385.92,37674.72</span><span class="se">\r</span><span class="s2">"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-04-28T09:50:49.700Z"</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">},</span><span class="w">
      </span><span class="p">{</span><span class="w">
        </span><span class="nl">"_index"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sales-records"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"_doc"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nn9aY2oBml718jk9tcOa"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_score"</span><span class="p">:</span><span class="w"> </span><span class="mf">1.2925828</span><span class="p">,</span><span class="w">
        </span><span class="nl">"_source"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="nl">"total_profit"</span><span class="p">:</span><span class="w"> </span><span class="mf">28054.08</span><span class="p">,</span><span class="w">
          </span><span class="nl">"sales_channel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Online"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">669640576</span><span class="p">,</span><span class="w">
          </span><span class="nl">"units_sold"</span><span class="p">:</span><span class="w"> </span><span class="mi">382</span><span class="p">,</span><span class="w">
          </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"_dateparsefailure"</span><span class="p">],</span><span class="w">
          </span><span class="nl">"total_revenue"</span><span class="p">:</span><span class="w"> </span><span class="mf">41744.96</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">35.84</span><span class="p">,</span><span class="w">
          </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"South Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_priority"</span><span class="p">:</span><span class="w"> </span><span class="s2">"C"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"ship_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"11/21/2015"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"unit_price"</span><span class="p">:</span><span class="w"> </span><span class="mf">109.28</span><span class="p">,</span><span class="w">
          </span><span class="nl">"total_cost"</span><span class="p">:</span><span class="w"> </span><span class="mf">13690.88</span><span class="p">,</span><span class="w">
          </span><span class="nl">"item_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Clothes"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"region"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"host"</span><span class="p">:</span><span class="w"> </span><span class="s2">"c5ceb9b17956"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"order_date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"11/17/2015"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"path"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/config-dir/1500000 Sales Records.csv"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sub-Saharan Africa,South Africa,Clothes,Online,C,11/17/2015,669640576,11/21/2015,382,109.28,35.84,41744.96,13690.88,28054.08</span><span class="se">\r</span><span class="s2">"</span><span class="p">,</span><span class="w">
          </span><span class="nl">"@timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2019-04-28T09:50:49.789Z"</span><span class="w">
        </span><span class="p">}</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>정확한 검색이 아닌 유사검색(문자 검색)과 같은 것은 query context를 사용하고 정확한 검색을 원할때는 filter context를 사용하면 될 것 같습니다.</p>]]></content><author><name></name></author><category term="Elastic"/><category term="Search"/><summary type="html"><![CDATA[Elasticsearch query context와 filter context 알아보기]]></summary></entry></feed>